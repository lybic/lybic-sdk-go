// Code generated by OpenAPI Generator. DO NOT EDIT.
//
// lybic
//
// No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
// API version: 0.8
// Generated by: OpenAPI Generator (https://openapi-generator.tech)
//

package lybic

import (
	"github.com/lybic/lybic-sdk-go/pkg/json"
)

// CreateSandboxDto struct for CreateSandboxDto
type CreateSandboxDto struct {
	// The name of the sandbox.
	Name *string `json:"name,omitempty"`
	// The maximum life time of the sandbox in seconds. Default is 1 hour, max is 1 day.
	MaxLifeSeconds *float32 `json:"maxLifeSeconds,omitempty"`
	// The project id to use for the sandbox. Use default if not provided.
	ProjectId *string `json:"projectId,omitempty"`
	// Specs and datacenter of the sandbox.
	Shape string `json:"shape"`
}

// NewCreateSandboxDto instantiates a new CreateSandboxDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSandboxDto(shape string) *CreateSandboxDto {
	this := CreateSandboxDto{}
	var name = "sandbox"
	this.Name = &name
	var maxLifeSeconds float32 = 3600
	this.MaxLifeSeconds = &maxLifeSeconds
	this.Shape = shape
	return &this
}

// NewCreateSandboxDtoWithDefaults instantiates a new CreateSandboxDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSandboxDtoWithDefaults() *CreateSandboxDto {
	this := CreateSandboxDto{}
	var name = "sandbox"
	this.Name = &name
	var maxLifeSeconds float32 = 3600
	this.MaxLifeSeconds = &maxLifeSeconds
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateSandboxDto) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxDto) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateSandboxDto) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateSandboxDto) SetName(v string) {
	o.Name = &v
}

// GetMaxLifeSeconds returns the MaxLifeSeconds field value if set, zero value otherwise.
func (o *CreateSandboxDto) GetMaxLifeSeconds() float32 {
	if o == nil || o.MaxLifeSeconds == nil {
		var ret float32
		return ret
	}
	return *o.MaxLifeSeconds
}

// GetMaxLifeSecondsOk returns a tuple with the MaxLifeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxDto) GetMaxLifeSecondsOk() (*float32, bool) {
	if o == nil || o.MaxLifeSeconds == nil {
		return nil, false
	}
	return o.MaxLifeSeconds, true
}

// HasMaxLifeSeconds returns a boolean if a field has been set.
func (o *CreateSandboxDto) HasMaxLifeSeconds() bool {
	if o != nil && o.MaxLifeSeconds != nil {
		return true
	}

	return false
}

// SetMaxLifeSeconds gets a reference to the given float32 and assigns it to the MaxLifeSeconds field.
func (o *CreateSandboxDto) SetMaxLifeSeconds(v float32) {
	o.MaxLifeSeconds = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *CreateSandboxDto) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSandboxDto) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *CreateSandboxDto) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *CreateSandboxDto) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetShape returns the Shape field value
func (o *CreateSandboxDto) GetShape() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Shape
}

// GetShapeOk returns a tuple with the Shape field value
// and a boolean to check if the value has been set.
func (o *CreateSandboxDto) GetShapeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Shape, true
}

// SetShape sets field value
func (o *CreateSandboxDto) SetShape(v string) {
	o.Shape = v
}

func (o CreateSandboxDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MaxLifeSeconds != nil {
		toSerialize["maxLifeSeconds"] = o.MaxLifeSeconds
	}
	if o.ProjectId != nil {
		toSerialize["projectId"] = o.ProjectId
	}
	if true {
		toSerialize["shape"] = o.Shape
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSandboxDto struct {
	value *CreateSandboxDto
	isSet bool
}

func (v NullableCreateSandboxDto) Get() *CreateSandboxDto {
	return v.value
}

func (v *NullableCreateSandboxDto) Set(val *CreateSandboxDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSandboxDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSandboxDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSandboxDto(val *CreateSandboxDto) *NullableCreateSandboxDto {
	return &NullableCreateSandboxDto{value: val, isSet: true}
}

func (v NullableCreateSandboxDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSandboxDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
