//
//protoc --go_out=. --go-grpc_out=. \
//--go_opt=paths=source_relative \
//--go-grpc_opt=paths=source_relative \
//pkg/agent/agent.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: pkg/agent/agent.proto

package agent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SandboxOS int32

const (
	SandboxOS_OSUNDEFINED SandboxOS = 0
	SandboxOS_WINDOWS     SandboxOS = 1
	SandboxOS_LINUX       SandboxOS = 2
	SandboxOS_ANDROID     SandboxOS = 3
)

// Enum value maps for SandboxOS.
var (
	SandboxOS_name = map[int32]string{
		0: "OSUNDEFINED",
		1: "WINDOWS",
		2: "LINUX",
		3: "ANDROID",
	}
	SandboxOS_value = map[string]int32{
		"OSUNDEFINED": 0,
		"WINDOWS":     1,
		"LINUX":       2,
		"ANDROID":     3,
	}
)

func (x SandboxOS) Enum() *SandboxOS {
	p := new(SandboxOS)
	*p = x
	return p
}

func (x SandboxOS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SandboxOS) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_agent_proto_enumTypes[0].Descriptor()
}

func (SandboxOS) Type() protoreflect.EnumType {
	return &file_pkg_agent_agent_proto_enumTypes[0]
}

func (x SandboxOS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SandboxOS.Descriptor instead.
func (SandboxOS) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{0}
}

type InstanceMode int32

const (
	InstanceMode_MODEUNDEFINED InstanceMode = 0
	InstanceMode_NORMAL        InstanceMode = 1
	InstanceMode_FAST          InstanceMode = 2
)

// Enum value maps for InstanceMode.
var (
	InstanceMode_name = map[int32]string{
		0: "MODEUNDEFINED",
		1: "NORMAL",
		2: "FAST",
	}
	InstanceMode_value = map[string]int32{
		"MODEUNDEFINED": 0,
		"NORMAL":        1,
		"FAST":          2,
	}
)

func (x InstanceMode) Enum() *InstanceMode {
	p := new(InstanceMode)
	*p = x
	return p
}

func (x InstanceMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_agent_proto_enumTypes[1].Descriptor()
}

func (InstanceMode) Type() protoreflect.EnumType {
	return &file_pkg_agent_agent_proto_enumTypes[1]
}

func (x InstanceMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceMode.Descriptor instead.
func (InstanceMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{1}
}

type TaskStatus int32

const (
	TaskStatus_TASKSTATUSUNDEFINED TaskStatus = 0
	TaskStatus_PENDING             TaskStatus = 1
	TaskStatus_RUNNING             TaskStatus = 2
	TaskStatus_SUCCESS             TaskStatus = 3
	TaskStatus_FAILURE             TaskStatus = 4
	TaskStatus_NOT_FOUND           TaskStatus = 5
	TaskStatus_CANCELLED           TaskStatus = 6
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASKSTATUSUNDEFINED",
		1: "PENDING",
		2: "RUNNING",
		3: "SUCCESS",
		4: "FAILURE",
		5: "NOT_FOUND",
		6: "CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASKSTATUSUNDEFINED": 0,
		"PENDING":             1,
		"RUNNING":             2,
		"SUCCESS":             3,
		"FAILURE":             4,
		"NOT_FOUND":           5,
		"CANCELLED":           6,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_agent_agent_proto_enumTypes[2].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_pkg_agent_agent_proto_enumTypes[2]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{2}
}

type SetGlobalCommonLLMConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LlmConfig     *LLMConfig             `protobuf:"bytes,1,opt,name=llmConfig,proto3" json:"llmConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetGlobalCommonLLMConfigRequest) Reset() {
	*x = SetGlobalCommonLLMConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGlobalCommonLLMConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGlobalCommonLLMConfigRequest) ProtoMessage() {}

func (x *SetGlobalCommonLLMConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGlobalCommonLLMConfigRequest.ProtoReflect.Descriptor instead.
func (*SetGlobalCommonLLMConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{0}
}

func (x *SetGlobalCommonLLMConfigRequest) GetLlmConfig() *LLMConfig {
	if x != nil {
		return x.LlmConfig
	}
	return nil
}

type SetGlobalEmbeddingLLMConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LlmConfig     *LLMConfig             `protobuf:"bytes,1,opt,name=llmConfig,proto3" json:"llmConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetGlobalEmbeddingLLMConfigRequest) Reset() {
	*x = SetGlobalEmbeddingLLMConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGlobalEmbeddingLLMConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGlobalEmbeddingLLMConfigRequest) ProtoMessage() {}

func (x *SetGlobalEmbeddingLLMConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGlobalEmbeddingLLMConfigRequest.ProtoReflect.Descriptor instead.
func (*SetGlobalEmbeddingLLMConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{1}
}

func (x *SetGlobalEmbeddingLLMConfigRequest) GetLlmConfig() *LLMConfig {
	if x != nil {
		return x.LlmConfig
	}
	return nil
}

type SetGlobalGroundingLLMConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LlmConfig     *LLMConfig             `protobuf:"bytes,1,opt,name=llmConfig,proto3" json:"llmConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetGlobalGroundingLLMConfigRequest) Reset() {
	*x = SetGlobalGroundingLLMConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGlobalGroundingLLMConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGlobalGroundingLLMConfigRequest) ProtoMessage() {}

func (x *SetGlobalGroundingLLMConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGlobalGroundingLLMConfigRequest.ProtoReflect.Descriptor instead.
func (*SetGlobalGroundingLLMConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{2}
}

func (x *SetGlobalGroundingLLMConfigRequest) GetLlmConfig() *LLMConfig {
	if x != nil {
		return x.LlmConfig
	}
	return nil
}

type SetGlobalCommonConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommonConfig  *CommonConfig          `protobuf:"bytes,1,opt,name=commonConfig,proto3" json:"commonConfig,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetGlobalCommonConfigRequest) Reset() {
	*x = SetGlobalCommonConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetGlobalCommonConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGlobalCommonConfigRequest) ProtoMessage() {}

func (x *SetGlobalCommonConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGlobalCommonConfigRequest.ProtoReflect.Descriptor instead.
func (*SetGlobalCommonConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{3}
}

func (x *SetGlobalCommonConfigRequest) GetCommonConfig() *CommonConfig {
	if x != nil {
		return x.CommonConfig
	}
	return nil
}

type SetCommonConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetCommonConfigResponse) Reset() {
	*x = SetCommonConfigResponse{}
	mi := &file_pkg_agent_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetCommonConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCommonConfigResponse) ProtoMessage() {}

func (x *SetCommonConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCommonConfigResponse.ProtoReflect.Descriptor instead.
func (*SetCommonConfigResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{4}
}

func (x *SetCommonConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SetCommonConfigResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetAgentInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentInfoRequest) Reset() {
	*x = GetAgentInfoRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentInfoRequest) ProtoMessage() {}

func (x *GetAgentInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentInfoRequest.ProtoReflect.Descriptor instead.
func (*GetAgentInfoRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{5}
}

type GetGlobalCommonConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGlobalCommonConfigRequest) Reset() {
	*x = GetGlobalCommonConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGlobalCommonConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGlobalCommonConfigRequest) ProtoMessage() {}

func (x *GetGlobalCommonConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGlobalCommonConfigRequest.ProtoReflect.Descriptor instead.
func (*GetGlobalCommonConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{6}
}

type GetCommonConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommonConfigRequest) Reset() {
	*x = GetCommonConfigRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommonConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommonConfigRequest) ProtoMessage() {}

func (x *GetCommonConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommonConfigRequest.ProtoReflect.Descriptor instead.
func (*GetCommonConfigRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{7}
}

func (x *GetCommonConfigRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AgentInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Version            string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	MaxConcurrentTasks int32                  `protobuf:"varint,2,opt,name=maxConcurrentTasks,proto3" json:"maxConcurrentTasks,omitempty"` // default 5
	LogLevel           string                 `protobuf:"bytes,3,opt,name=log_level,json=logLevel,proto3" json:"log_level,omitempty"`
	Domain             *string                `protobuf:"bytes,4,opt,name=domain,proto3,oneof" json:"domain,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AgentInfo) Reset() {
	*x = AgentInfo{}
	mi := &file_pkg_agent_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentInfo) ProtoMessage() {}

func (x *AgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentInfo.ProtoReflect.Descriptor instead.
func (*AgentInfo) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{8}
}

func (x *AgentInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentInfo) GetMaxConcurrentTasks() int32 {
	if x != nil {
		return x.MaxConcurrentTasks
	}
	return 0
}

func (x *AgentInfo) GetLogLevel() string {
	if x != nil {
		return x.LogLevel
	}
	return ""
}

func (x *AgentInfo) GetDomain() string {
	if x != nil && x.Domain != nil {
		return *x.Domain
	}
	return ""
}

type Sandbox struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sandbox id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// sandbox name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// sandbox description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// sandbox shape
	ShapeName string `protobuf:"bytes,4,opt,name=shapeName,proto3" json:"shapeName,omitempty"`
	// is hardware accelerated encoding
	HardwareAcceleratedEncoding bool `protobuf:"varint,5,opt,name=hardwareAcceleratedEncoding,proto3" json:"hardwareAcceleratedEncoding,omitempty"`
	// sandbox os type
	Os SandboxOS `protobuf:"varint,6,opt,name=os,proto3,enum=lybic.agent.SandboxOS" json:"os,omitempty"`
	// virtualization
	Virtualization string `protobuf:"bytes,7,opt,name=virtualization,proto3" json:"virtualization,omitempty"` // KVM or Container
	// architecture
	Architecture  string `protobuf:"bytes,8,opt,name=architecture,proto3" json:"architecture,omitempty"` // x86_64 or aarch64
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Sandbox) Reset() {
	*x = Sandbox{}
	mi := &file_pkg_agent_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Sandbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sandbox) ProtoMessage() {}

func (x *Sandbox) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sandbox.ProtoReflect.Descriptor instead.
func (*Sandbox) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{9}
}

func (x *Sandbox) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Sandbox) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Sandbox) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Sandbox) GetShapeName() string {
	if x != nil {
		return x.ShapeName
	}
	return ""
}

func (x *Sandbox) GetHardwareAcceleratedEncoding() bool {
	if x != nil {
		return x.HardwareAcceleratedEncoding
	}
	return false
}

func (x *Sandbox) GetOs() SandboxOS {
	if x != nil {
		return x.Os
	}
	return SandboxOS_OSUNDEFINED
}

func (x *Sandbox) GetVirtualization() string {
	if x != nil {
		return x.Virtualization
	}
	return ""
}

func (x *Sandbox) GetArchitecture() string {
	if x != nil {
		return x.Architecture
	}
	return ""
}

type Authorization struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrgID         string                 `protobuf:"bytes,1,opt,name=orgID,proto3" json:"orgID,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=apiKey,proto3" json:"apiKey,omitempty"`
	ApiEndpoint   *string                `protobuf:"bytes,3,opt,name=apiEndpoint,proto3,oneof" json:"apiEndpoint,omitempty"` // default https://api.lybic.cn
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Authorization) Reset() {
	*x = Authorization{}
	mi := &file_pkg_agent_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Authorization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Authorization) ProtoMessage() {}

func (x *Authorization) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Authorization.ProtoReflect.Descriptor instead.
func (*Authorization) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{10}
}

func (x *Authorization) GetOrgID() string {
	if x != nil {
		return x.OrgID
	}
	return ""
}

func (x *Authorization) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *Authorization) GetApiEndpoint() string {
	if x != nil && x.ApiEndpoint != nil {
		return *x.ApiEndpoint
	}
	return ""
}

type LLMConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelName     string                 `protobuf:"bytes,1,opt,name=modelName,proto3" json:"modelName,omitempty"`
	Provider      *string                `protobuf:"bytes,2,opt,name=provider,proto3,oneof" json:"provider,omitempty"` // if not specified, agent will automatically find the provider form the model name (support doubao,gemini,deepseek)
	ApiKey        *string                `protobuf:"bytes,3,opt,name=apiKey,proto3,oneof" json:"apiKey,omitempty"`
	ApiEndpoint   *string                `protobuf:"bytes,4,opt,name=apiEndpoint,proto3,oneof" json:"apiEndpoint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LLMConfig) Reset() {
	*x = LLMConfig{}
	mi := &file_pkg_agent_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LLMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LLMConfig) ProtoMessage() {}

func (x *LLMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LLMConfig.ProtoReflect.Descriptor instead.
func (*LLMConfig) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{11}
}

func (x *LLMConfig) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *LLMConfig) GetProvider() string {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return ""
}

func (x *LLMConfig) GetApiKey() string {
	if x != nil && x.ApiKey != nil {
		return *x.ApiKey
	}
	return ""
}

func (x *LLMConfig) GetApiEndpoint() string {
	if x != nil && x.ApiEndpoint != nil {
		return *x.ApiEndpoint
	}
	return ""
}

type StageModelConfig struct {
	state                                protoimpl.MessageState `protogen:"open.v1"`
	WebSearchEngine                      *string                `protobuf:"bytes,1,opt,name=webSearchEngine,proto3,oneof" json:"webSearchEngine,omitempty"`
	ContextFusionModel                   *LLMConfig             `protobuf:"bytes,2,opt,name=contextFusionModel,proto3,oneof" json:"contextFusionModel,omitempty"`
	SubtaskPlannerModel                  *LLMConfig             `protobuf:"bytes,3,opt,name=subtaskPlannerModel,proto3,oneof" json:"subtaskPlannerModel,omitempty"`
	TrajReflectorModel                   *LLMConfig             `protobuf:"bytes,4,opt,name=trajReflectorModel,proto3,oneof" json:"trajReflectorModel,omitempty"`
	MemoryRetrivalModel                  *LLMConfig             `protobuf:"bytes,5,opt,name=memoryRetrivalModel,proto3,oneof" json:"memoryRetrivalModel,omitempty"`
	GroundingModel                       *LLMConfig             `protobuf:"bytes,6,opt,name=groundingModel,proto3,oneof" json:"groundingModel,omitempty"`
	TaskEvaluatorModel                   *LLMConfig             `protobuf:"bytes,7,opt,name=taskEvaluatorModel,proto3,oneof" json:"taskEvaluatorModel,omitempty"`
	ActionGeneratorModel                 *LLMConfig             `protobuf:"bytes,8,opt,name=actionGeneratorModel,proto3,oneof" json:"actionGeneratorModel,omitempty"`
	ActionGeneratorWithTakeoverModel     *LLMConfig             `protobuf:"bytes,9,opt,name=actionGeneratorWithTakeoverModel,proto3,oneof" json:"actionGeneratorWithTakeoverModel,omitempty"`
	FastActionGeneratorModel             *LLMConfig             `protobuf:"bytes,10,opt,name=fastActionGeneratorModel,proto3,oneof" json:"fastActionGeneratorModel,omitempty"`
	FastActionGeneratorWithTakeoverModel *LLMConfig             `protobuf:"bytes,11,opt,name=fastActionGeneratorWithTakeoverModel,proto3,oneof" json:"fastActionGeneratorWithTakeoverModel,omitempty"`
	DagTranslatorModel                   *LLMConfig             `protobuf:"bytes,12,opt,name=dagTranslatorModel,proto3,oneof" json:"dagTranslatorModel,omitempty"`
	EmbeddingModel                       *LLMConfig             `protobuf:"bytes,13,opt,name=embeddingModel,proto3,oneof" json:"embeddingModel,omitempty"`
	QueryFormulatorModel                 *LLMConfig             `protobuf:"bytes,14,opt,name=queryFormulatorModel,proto3,oneof" json:"queryFormulatorModel,omitempty"`
	NarrativeSummarizationModel          *LLMConfig             `protobuf:"bytes,15,opt,name=narrativeSummarizationModel,proto3,oneof" json:"narrativeSummarizationModel,omitempty"`
	TextSpanModel                        *LLMConfig             `protobuf:"bytes,16,opt,name=textSpanModel,proto3,oneof" json:"textSpanModel,omitempty"`
	EpisodeSummarizationModel            *LLMConfig             `protobuf:"bytes,17,opt,name=episodeSummarizationModel,proto3,oneof" json:"episodeSummarizationModel,omitempty"`
	unknownFields                        protoimpl.UnknownFields
	sizeCache                            protoimpl.SizeCache
}

func (x *StageModelConfig) Reset() {
	*x = StageModelConfig{}
	mi := &file_pkg_agent_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StageModelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageModelConfig) ProtoMessage() {}

func (x *StageModelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageModelConfig.ProtoReflect.Descriptor instead.
func (*StageModelConfig) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{12}
}

func (x *StageModelConfig) GetWebSearchEngine() string {
	if x != nil && x.WebSearchEngine != nil {
		return *x.WebSearchEngine
	}
	return ""
}

func (x *StageModelConfig) GetContextFusionModel() *LLMConfig {
	if x != nil {
		return x.ContextFusionModel
	}
	return nil
}

func (x *StageModelConfig) GetSubtaskPlannerModel() *LLMConfig {
	if x != nil {
		return x.SubtaskPlannerModel
	}
	return nil
}

func (x *StageModelConfig) GetTrajReflectorModel() *LLMConfig {
	if x != nil {
		return x.TrajReflectorModel
	}
	return nil
}

func (x *StageModelConfig) GetMemoryRetrivalModel() *LLMConfig {
	if x != nil {
		return x.MemoryRetrivalModel
	}
	return nil
}

func (x *StageModelConfig) GetGroundingModel() *LLMConfig {
	if x != nil {
		return x.GroundingModel
	}
	return nil
}

func (x *StageModelConfig) GetTaskEvaluatorModel() *LLMConfig {
	if x != nil {
		return x.TaskEvaluatorModel
	}
	return nil
}

func (x *StageModelConfig) GetActionGeneratorModel() *LLMConfig {
	if x != nil {
		return x.ActionGeneratorModel
	}
	return nil
}

func (x *StageModelConfig) GetActionGeneratorWithTakeoverModel() *LLMConfig {
	if x != nil {
		return x.ActionGeneratorWithTakeoverModel
	}
	return nil
}

func (x *StageModelConfig) GetFastActionGeneratorModel() *LLMConfig {
	if x != nil {
		return x.FastActionGeneratorModel
	}
	return nil
}

func (x *StageModelConfig) GetFastActionGeneratorWithTakeoverModel() *LLMConfig {
	if x != nil {
		return x.FastActionGeneratorWithTakeoverModel
	}
	return nil
}

func (x *StageModelConfig) GetDagTranslatorModel() *LLMConfig {
	if x != nil {
		return x.DagTranslatorModel
	}
	return nil
}

func (x *StageModelConfig) GetEmbeddingModel() *LLMConfig {
	if x != nil {
		return x.EmbeddingModel
	}
	return nil
}

func (x *StageModelConfig) GetQueryFormulatorModel() *LLMConfig {
	if x != nil {
		return x.QueryFormulatorModel
	}
	return nil
}

func (x *StageModelConfig) GetNarrativeSummarizationModel() *LLMConfig {
	if x != nil {
		return x.NarrativeSummarizationModel
	}
	return nil
}

func (x *StageModelConfig) GetTextSpanModel() *LLMConfig {
	if x != nil {
		return x.TextSpanModel
	}
	return nil
}

func (x *StageModelConfig) GetEpisodeSummarizationModel() *LLMConfig {
	if x != nil {
		return x.EpisodeSummarizationModel
	}
	return nil
}

type CommonConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Backend           *string                `protobuf:"bytes,2,opt,name=backend,proto3,oneof" json:"backend,omitempty"`                     // only `lybic` backend supported yet
	Mode              InstanceMode           `protobuf:"varint,3,opt,name=mode,proto3,enum=lybic.agent.InstanceMode" json:"mode,omitempty"`  // agent mode default is FAST
	Steps             *int32                 `protobuf:"varint,4,opt,name=steps,proto3,oneof" json:"steps,omitempty"`                        // default max steps is 50
	Platform          string                 `protobuf:"bytes,5,opt,name=platform,proto3" json:"platform,omitempty"`                         // agent target plat。 this is not used now
	TaskTimeout       *int32                 `protobuf:"varint,6,opt,name=taskTimeout,proto3,oneof" json:"taskTimeout,omitempty"`            // default 3600 (s)(1 hour)
	AuthorizationInfo *Authorization         `protobuf:"bytes,7,opt,name=authorizationInfo,proto3,oneof" json:"authorizationInfo,omitempty"` // lybic authorization info
	StageModelConfig  *StageModelConfig      `protobuf:"bytes,8,opt,name=stageModelConfig,proto3,oneof" json:"stageModelConfig,omitempty"`   // agent stage model config
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CommonConfig) Reset() {
	*x = CommonConfig{}
	mi := &file_pkg_agent_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonConfig) ProtoMessage() {}

func (x *CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonConfig.ProtoReflect.Descriptor instead.
func (*CommonConfig) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{13}
}

func (x *CommonConfig) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CommonConfig) GetBackend() string {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return ""
}

func (x *CommonConfig) GetMode() InstanceMode {
	if x != nil {
		return x.Mode
	}
	return InstanceMode_MODEUNDEFINED
}

func (x *CommonConfig) GetSteps() int32 {
	if x != nil && x.Steps != nil {
		return *x.Steps
	}
	return 0
}

func (x *CommonConfig) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CommonConfig) GetTaskTimeout() int32 {
	if x != nil && x.TaskTimeout != nil {
		return *x.TaskTimeout
	}
	return 0
}

func (x *CommonConfig) GetAuthorizationInfo() *Authorization {
	if x != nil {
		return x.AuthorizationInfo
	}
	return nil
}

func (x *CommonConfig) GetStageModelConfig() *StageModelConfig {
	if x != nil {
		return x.StageModelConfig
	}
	return nil
}

type RunAgentInstructionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// natural language instruction
	Instruction   string        `protobuf:"bytes,1,opt,name=instruction,proto3" json:"instruction,omitempty"`
	Sandbox       *Sandbox      `protobuf:"bytes,2,opt,name=sandbox,proto3,oneof" json:"sandbox,omitempty"`             // if sandbox is not specified, agent will create a sandbox to execute the instruction
	RunningConfig *CommonConfig `protobuf:"bytes,3,opt,name=runningConfig,proto3,oneof" json:"runningConfig,omitempty"` // if runningConfig is not specified, agent will use the default global config
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunAgentInstructionRequest) Reset() {
	*x = RunAgentInstructionRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunAgentInstructionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAgentInstructionRequest) ProtoMessage() {}

func (x *RunAgentInstructionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAgentInstructionRequest.ProtoReflect.Descriptor instead.
func (*RunAgentInstructionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{14}
}

func (x *RunAgentInstructionRequest) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *RunAgentInstructionRequest) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

func (x *RunAgentInstructionRequest) GetRunningConfig() *CommonConfig {
	if x != nil {
		return x.RunningConfig
	}
	return nil
}

type RunAgentInstructionAsyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RunAgentInstructionAsyncResponse) Reset() {
	*x = RunAgentInstructionAsyncResponse{}
	mi := &file_pkg_agent_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RunAgentInstructionAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunAgentInstructionAsyncResponse) ProtoMessage() {}

func (x *RunAgentInstructionAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunAgentInstructionAsyncResponse.ProtoReflect.Descriptor instead.
func (*RunAgentInstructionAsyncResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{15}
}

func (x *RunAgentInstructionAsyncResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type QueryTaskStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTaskStatusRequest) Reset() {
	*x = QueryTaskStatusRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTaskStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTaskStatusRequest) ProtoMessage() {}

func (x *QueryTaskStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTaskStatusRequest.ProtoReflect.Descriptor instead.
func (*QueryTaskStatusRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{16}
}

func (x *QueryTaskStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type QueryTaskStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Status        TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=lybic.agent.TaskStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result        string                 `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	Sandbox       *Sandbox               `protobuf:"bytes,5,opt,name=sandbox,proto3,oneof" json:"sandbox,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryTaskStatusResponse) Reset() {
	*x = QueryTaskStatusResponse{}
	mi := &file_pkg_agent_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTaskStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTaskStatusResponse) ProtoMessage() {}

func (x *QueryTaskStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTaskStatusResponse.ProtoReflect.Descriptor instead.
func (*QueryTaskStatusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{17}
}

func (x *QueryTaskStatusResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *QueryTaskStatusResponse) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASKSTATUSUNDEFINED
}

func (x *QueryTaskStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QueryTaskStatusResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *QueryTaskStatusResponse) GetSandbox() *Sandbox {
	if x != nil {
		return x.Sandbox
	}
	return nil
}

type GetAgentTaskStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentTaskStreamRequest) Reset() {
	*x = GetAgentTaskStreamRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentTaskStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentTaskStreamRequest) ProtoMessage() {}

func (x *GetAgentTaskStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentTaskStreamRequest.ProtoReflect.Descriptor instead.
func (*GetAgentTaskStreamRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{18}
}

func (x *GetAgentTaskStreamRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetAgentTaskStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskStream    *TaskStream            `protobuf:"bytes,1,opt,name=taskStream,proto3" json:"taskStream,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentTaskStreamResponse) Reset() {
	*x = GetAgentTaskStreamResponse{}
	mi := &file_pkg_agent_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentTaskStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentTaskStreamResponse) ProtoMessage() {}

func (x *GetAgentTaskStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentTaskStreamResponse.ProtoReflect.Descriptor instead.
func (*GetAgentTaskStreamResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{19}
}

func (x *GetAgentTaskStreamResponse) GetTaskStream() *TaskStream {
	if x != nil {
		return x.TaskStream
	}
	return nil
}

type TaskStream struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Stage         string                 `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStream) Reset() {
	*x = TaskStream{}
	mi := &file_pkg_agent_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStream) ProtoMessage() {}

func (x *TaskStream) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStream.ProtoReflect.Descriptor instead.
func (*TaskStream) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{20}
}

func (x *TaskStream) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskStream) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *TaskStream) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TaskStream) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type CancelTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTaskRequest) Reset() {
	*x = CancelTaskRequest{}
	mi := &file_pkg_agent_agent_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskRequest) ProtoMessage() {}

func (x *CancelTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskRequest.ProtoReflect.Descriptor instead.
func (*CancelTaskRequest) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{21}
}

func (x *CancelTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type CancelTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=taskId,proto3" json:"taskId,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelTaskResponse) Reset() {
	*x = CancelTaskResponse{}
	mi := &file_pkg_agent_agent_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTaskResponse) ProtoMessage() {}

func (x *CancelTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_agent_agent_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTaskResponse.ProtoReflect.Descriptor instead.
func (*CancelTaskResponse) Descriptor() ([]byte, []int) {
	return file_pkg_agent_agent_proto_rawDescGZIP(), []int{22}
}

func (x *CancelTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CancelTaskResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelTaskResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_agent_agent_proto protoreflect.FileDescriptor

var file_pkg_agent_agent_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x57, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x6c, 0x6d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79,
	0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x09, 0x6c, 0x6c, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5a,
	0x0a, 0x22, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6c, 0x6c, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x6c, 0x6c, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5a, 0x0a, 0x22, 0x53, 0x65,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x34, 0x0a, 0x09, 0x6c, 0x6c, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6c, 0x6c, 0x6d,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x5d, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x43, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x1e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x09,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x1b, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xa3, 0x02, 0x0a, 0x07, 0x53, 0x61, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68,
	0x61, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x61, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1b, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x45,
	0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x4f, 0x53, 0x52, 0x02,
	0x6f, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x22, 0x74,
	0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x25, 0x0a,
	0x0b, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x09, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0b, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x61, 0x70, 0x69, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0xa2, 0x0e,
	0x0a, 0x10, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x2d, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x77,
	0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x4b, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x46, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x46, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4d,
	0x0a, 0x13, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79,
	0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x02, 0x52, 0x13, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6c,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a,
	0x12, 0x74, 0x72, 0x61, 0x6a, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x03, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6a, 0x52, 0x65, 0x66, 0x6c, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4d, 0x0a, 0x13, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x04, 0x52, 0x13, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x76, 0x61,
	0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x05, 0x52, 0x0e, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4b,
	0x0a, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x48, 0x06, 0x52, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61,
	0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a, 0x14, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x07, 0x52, 0x14, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x67, 0x0a, 0x20,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x08,
	0x52, 0x20, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x18, 0x66, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x09, 0x52, 0x18, 0x66, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x6f,
	0x0a, 0x24, 0x66, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x0a, 0x52, 0x24, 0x66, 0x61, 0x73, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x4b, 0x0a, 0x12, 0x64, 0x61, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79,
	0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x0b, 0x52, 0x12, 0x64, 0x61, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0c, 0x52, 0x0e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x4f, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c,
	0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c,
	0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x0d, 0x52, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x5d, 0x0a, 0x1b, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x0e, 0x52, 0x1b, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x41, 0x0a, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x48, 0x0f, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x59, 0x0a, 0x19, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48,
	0x10, 0x52, 0x19, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x42,
	0x12, 0x0a, 0x10, 0x5f, 0x77, 0x65, 0x62, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x46,
	0x75, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73,
	0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x6c, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x72, 0x61, 0x6a, 0x52, 0x65, 0x66, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x74, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x45, 0x76, 0x61,
	0x6c, 0x75, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x17, 0x0a, 0x15, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x23, 0x0a, 0x21, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x54, 0x61, 0x6b, 0x65,
	0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x66, 0x61,
	0x73, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x27, 0x0a, 0x25, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x6f, 0x76, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42,
	0x15, 0x0a, 0x13, 0x5f, 0x64, 0x61, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x64, 0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x1e, 0x0a, 0x1c, 0x5f, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x65, 0x70, 0x69, 0x73, 0x6f, 0x64, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0xba, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x19, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x01, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x61, 0x73, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52,
	0x0b, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x4d, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x03, 0x52, 0x11, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x4e,
	0x0a, 0x10, 0x73, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x04, 0x52, 0x10, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73,
	0x74, 0x65, 0x70, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0xd7, 0x01, 0x0a, 0x1a, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x48, 0x00, 0x52, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x01, 0x52, 0x0d, 0x72, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x75, 0x6e, 0x6e,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x3a, 0x0a, 0x20, 0x52, 0x75, 0x6e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6c, 0x79,
	0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x33,
	0x0a, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x61,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x48, 0x00, 0x52, 0x07, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22,
	0x33, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52,
	0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x8e, 0x01, 0x0a, 0x0a,
	0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x2b, 0x0a, 0x11,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x60, 0x0a, 0x12, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x41, 0x0a, 0x09, 0x53,
	0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x4f, 0x53, 0x12, 0x0f, 0x0a, 0x0b, 0x4f, 0x53, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x49, 0x4e,
	0x44, 0x4f, 0x57, 0x53, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49, 0x4e, 0x55, 0x58, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10, 0x03, 0x2a, 0x37,
	0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x11,
	0x0a, 0x0d, 0x4d, 0x4f, 0x44, 0x45, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x46, 0x41, 0x53, 0x54, 0x10, 0x02, 0x2a, 0x77, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x41, 0x53, 0x4b, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06,
	0x32, 0x84, 0x09, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x2e,
	0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x51, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x79,
	0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x68, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x29, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x66, 0x0a, 0x1b, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2f, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x66, 0x0a, 0x1b, 0x53, 0x65,
	0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67,
	0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x2e, 0x6c, 0x79, 0x62, 0x69,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x6c, 0x79, 0x62,
	0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x4c, 0x4d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x59, 0x0a, 0x13, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x6c, 0x79, 0x62, 0x69,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x30, 0x01, 0x12, 0x72, 0x0a,
	0x18, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x27, 0x2e, 0x6c, 0x79, 0x62, 0x69,
	0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x75, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x67, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x26, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x27, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x0f, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x2e,
	0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1e, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x47, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x6c,
	0x79, 0x62, 0x69, 0x63, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x79, 0x62, 0x69, 0x63, 0x2f, 0x6c, 0x79, 0x62, 0x69, 0x63,
	0x2d, 0x73, 0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x90, 0x01, 0x01,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pkg_agent_agent_proto_rawDescOnce sync.Once
	file_pkg_agent_agent_proto_rawDescData []byte
)

func file_pkg_agent_agent_proto_rawDescGZIP() []byte {
	file_pkg_agent_agent_proto_rawDescOnce.Do(func() {
		file_pkg_agent_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_agent_agent_proto_rawDesc), len(file_pkg_agent_agent_proto_rawDesc)))
	})
	return file_pkg_agent_agent_proto_rawDescData
}

var file_pkg_agent_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pkg_agent_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_pkg_agent_agent_proto_goTypes = []any{
	(SandboxOS)(0),                             // 0: lybic.agent.SandboxOS
	(InstanceMode)(0),                          // 1: lybic.agent.InstanceMode
	(TaskStatus)(0),                            // 2: lybic.agent.TaskStatus
	(*SetGlobalCommonLLMConfigRequest)(nil),    // 3: lybic.agent.SetGlobalCommonLLMConfigRequest
	(*SetGlobalEmbeddingLLMConfigRequest)(nil), // 4: lybic.agent.SetGlobalEmbeddingLLMConfigRequest
	(*SetGlobalGroundingLLMConfigRequest)(nil), // 5: lybic.agent.SetGlobalGroundingLLMConfigRequest
	(*SetGlobalCommonConfigRequest)(nil),       // 6: lybic.agent.SetGlobalCommonConfigRequest
	(*SetCommonConfigResponse)(nil),            // 7: lybic.agent.SetCommonConfigResponse
	(*GetAgentInfoRequest)(nil),                // 8: lybic.agent.GetAgentInfoRequest
	(*GetGlobalCommonConfigRequest)(nil),       // 9: lybic.agent.GetGlobalCommonConfigRequest
	(*GetCommonConfigRequest)(nil),             // 10: lybic.agent.GetCommonConfigRequest
	(*AgentInfo)(nil),                          // 11: lybic.agent.AgentInfo
	(*Sandbox)(nil),                            // 12: lybic.agent.Sandbox
	(*Authorization)(nil),                      // 13: lybic.agent.Authorization
	(*LLMConfig)(nil),                          // 14: lybic.agent.LLMConfig
	(*StageModelConfig)(nil),                   // 15: lybic.agent.StageModelConfig
	(*CommonConfig)(nil),                       // 16: lybic.agent.CommonConfig
	(*RunAgentInstructionRequest)(nil),         // 17: lybic.agent.RunAgentInstructionRequest
	(*RunAgentInstructionAsyncResponse)(nil),   // 18: lybic.agent.RunAgentInstructionAsyncResponse
	(*QueryTaskStatusRequest)(nil),             // 19: lybic.agent.QueryTaskStatusRequest
	(*QueryTaskStatusResponse)(nil),            // 20: lybic.agent.QueryTaskStatusResponse
	(*GetAgentTaskStreamRequest)(nil),          // 21: lybic.agent.GetAgentTaskStreamRequest
	(*GetAgentTaskStreamResponse)(nil),         // 22: lybic.agent.GetAgentTaskStreamResponse
	(*TaskStream)(nil),                         // 23: lybic.agent.TaskStream
	(*CancelTaskRequest)(nil),                  // 24: lybic.agent.CancelTaskRequest
	(*CancelTaskResponse)(nil),                 // 25: lybic.agent.CancelTaskResponse
	(*timestamppb.Timestamp)(nil),              // 26: google.protobuf.Timestamp
}
var file_pkg_agent_agent_proto_depIdxs = []int32{
	14, // 0: lybic.agent.SetGlobalCommonLLMConfigRequest.llmConfig:type_name -> lybic.agent.LLMConfig
	14, // 1: lybic.agent.SetGlobalEmbeddingLLMConfigRequest.llmConfig:type_name -> lybic.agent.LLMConfig
	14, // 2: lybic.agent.SetGlobalGroundingLLMConfigRequest.llmConfig:type_name -> lybic.agent.LLMConfig
	16, // 3: lybic.agent.SetGlobalCommonConfigRequest.commonConfig:type_name -> lybic.agent.CommonConfig
	0,  // 4: lybic.agent.Sandbox.os:type_name -> lybic.agent.SandboxOS
	14, // 5: lybic.agent.StageModelConfig.contextFusionModel:type_name -> lybic.agent.LLMConfig
	14, // 6: lybic.agent.StageModelConfig.subtaskPlannerModel:type_name -> lybic.agent.LLMConfig
	14, // 7: lybic.agent.StageModelConfig.trajReflectorModel:type_name -> lybic.agent.LLMConfig
	14, // 8: lybic.agent.StageModelConfig.memoryRetrivalModel:type_name -> lybic.agent.LLMConfig
	14, // 9: lybic.agent.StageModelConfig.groundingModel:type_name -> lybic.agent.LLMConfig
	14, // 10: lybic.agent.StageModelConfig.taskEvaluatorModel:type_name -> lybic.agent.LLMConfig
	14, // 11: lybic.agent.StageModelConfig.actionGeneratorModel:type_name -> lybic.agent.LLMConfig
	14, // 12: lybic.agent.StageModelConfig.actionGeneratorWithTakeoverModel:type_name -> lybic.agent.LLMConfig
	14, // 13: lybic.agent.StageModelConfig.fastActionGeneratorModel:type_name -> lybic.agent.LLMConfig
	14, // 14: lybic.agent.StageModelConfig.fastActionGeneratorWithTakeoverModel:type_name -> lybic.agent.LLMConfig
	14, // 15: lybic.agent.StageModelConfig.dagTranslatorModel:type_name -> lybic.agent.LLMConfig
	14, // 16: lybic.agent.StageModelConfig.embeddingModel:type_name -> lybic.agent.LLMConfig
	14, // 17: lybic.agent.StageModelConfig.queryFormulatorModel:type_name -> lybic.agent.LLMConfig
	14, // 18: lybic.agent.StageModelConfig.narrativeSummarizationModel:type_name -> lybic.agent.LLMConfig
	14, // 19: lybic.agent.StageModelConfig.textSpanModel:type_name -> lybic.agent.LLMConfig
	14, // 20: lybic.agent.StageModelConfig.episodeSummarizationModel:type_name -> lybic.agent.LLMConfig
	1,  // 21: lybic.agent.CommonConfig.mode:type_name -> lybic.agent.InstanceMode
	13, // 22: lybic.agent.CommonConfig.authorizationInfo:type_name -> lybic.agent.Authorization
	15, // 23: lybic.agent.CommonConfig.stageModelConfig:type_name -> lybic.agent.StageModelConfig
	12, // 24: lybic.agent.RunAgentInstructionRequest.sandbox:type_name -> lybic.agent.Sandbox
	16, // 25: lybic.agent.RunAgentInstructionRequest.runningConfig:type_name -> lybic.agent.CommonConfig
	2,  // 26: lybic.agent.QueryTaskStatusResponse.status:type_name -> lybic.agent.TaskStatus
	12, // 27: lybic.agent.QueryTaskStatusResponse.sandbox:type_name -> lybic.agent.Sandbox
	23, // 28: lybic.agent.GetAgentTaskStreamResponse.taskStream:type_name -> lybic.agent.TaskStream
	26, // 29: lybic.agent.TaskStream.timestamp:type_name -> google.protobuf.Timestamp
	8,  // 30: lybic.agent.Agent.GetAgentInfo:input_type -> lybic.agent.GetAgentInfoRequest
	9,  // 31: lybic.agent.Agent.GetGlobalCommonConfig:input_type -> lybic.agent.GetGlobalCommonConfigRequest
	10, // 32: lybic.agent.Agent.GetCommonConfig:input_type -> lybic.agent.GetCommonConfigRequest
	6,  // 33: lybic.agent.Agent.SetGlobalCommonConfig:input_type -> lybic.agent.SetGlobalCommonConfigRequest
	3,  // 34: lybic.agent.Agent.SetGlobalCommonLLMConfig:input_type -> lybic.agent.SetGlobalCommonLLMConfigRequest
	5,  // 35: lybic.agent.Agent.SetGlobalGroundingLLMConfig:input_type -> lybic.agent.SetGlobalGroundingLLMConfigRequest
	4,  // 36: lybic.agent.Agent.SetGlobalEmbeddingLLMConfig:input_type -> lybic.agent.SetGlobalEmbeddingLLMConfigRequest
	17, // 37: lybic.agent.Agent.RunAgentInstruction:input_type -> lybic.agent.RunAgentInstructionRequest
	17, // 38: lybic.agent.Agent.RunAgentInstructionAsync:input_type -> lybic.agent.RunAgentInstructionRequest
	21, // 39: lybic.agent.Agent.GetAgentTaskStream:input_type -> lybic.agent.GetAgentTaskStreamRequest
	19, // 40: lybic.agent.Agent.QueryTaskStatus:input_type -> lybic.agent.QueryTaskStatusRequest
	24, // 41: lybic.agent.Agent.CancelTask:input_type -> lybic.agent.CancelTaskRequest
	11, // 42: lybic.agent.Agent.GetAgentInfo:output_type -> lybic.agent.AgentInfo
	16, // 43: lybic.agent.Agent.GetGlobalCommonConfig:output_type -> lybic.agent.CommonConfig
	16, // 44: lybic.agent.Agent.GetCommonConfig:output_type -> lybic.agent.CommonConfig
	7,  // 45: lybic.agent.Agent.SetGlobalCommonConfig:output_type -> lybic.agent.SetCommonConfigResponse
	14, // 46: lybic.agent.Agent.SetGlobalCommonLLMConfig:output_type -> lybic.agent.LLMConfig
	14, // 47: lybic.agent.Agent.SetGlobalGroundingLLMConfig:output_type -> lybic.agent.LLMConfig
	14, // 48: lybic.agent.Agent.SetGlobalEmbeddingLLMConfig:output_type -> lybic.agent.LLMConfig
	23, // 49: lybic.agent.Agent.RunAgentInstruction:output_type -> lybic.agent.TaskStream
	18, // 50: lybic.agent.Agent.RunAgentInstructionAsync:output_type -> lybic.agent.RunAgentInstructionAsyncResponse
	22, // 51: lybic.agent.Agent.GetAgentTaskStream:output_type -> lybic.agent.GetAgentTaskStreamResponse
	20, // 52: lybic.agent.Agent.QueryTaskStatus:output_type -> lybic.agent.QueryTaskStatusResponse
	25, // 53: lybic.agent.Agent.CancelTask:output_type -> lybic.agent.CancelTaskResponse
	42, // [42:54] is the sub-list for method output_type
	30, // [30:42] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_pkg_agent_agent_proto_init() }
func file_pkg_agent_agent_proto_init() {
	if File_pkg_agent_agent_proto != nil {
		return
	}
	file_pkg_agent_agent_proto_msgTypes[8].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[10].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[11].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[12].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[13].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[14].OneofWrappers = []any{}
	file_pkg_agent_agent_proto_msgTypes[17].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_agent_agent_proto_rawDesc), len(file_pkg_agent_agent_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_agent_agent_proto_goTypes,
		DependencyIndexes: file_pkg_agent_agent_proto_depIdxs,
		EnumInfos:         file_pkg_agent_agent_proto_enumTypes,
		MessageInfos:      file_pkg_agent_agent_proto_msgTypes,
	}.Build()
	File_pkg_agent_agent_proto = out.File
	file_pkg_agent_agent_proto_goTypes = nil
	file_pkg_agent_agent_proto_depIdxs = nil
}
