// Code generated by OpenAPI Generator. DO NOT EDIT.
//
// lybic
//
// No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
// API version: 0.6.3
// Generated by: OpenAPI Generator (https://openapi-generator.tech)
//

package lybic

import (
	"encoding/json"
)

// SingleProjectResponseDto struct for SingleProjectResponseDto
type SingleProjectResponseDto struct {
	Id             string `json:"id"`
	Name           string `json:"name"`
	CreatedAt      string `json:"createdAt"`
	DefaultProject bool   `json:"defaultProject"`
}

// NewSingleProjectResponseDto instantiates a new SingleProjectResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleProjectResponseDto(id string, name string, createdAt string, defaultProject bool) *SingleProjectResponseDto {
	this := SingleProjectResponseDto{}
	this.Id = id
	this.Name = name
	this.CreatedAt = createdAt
	this.DefaultProject = defaultProject
	return &this
}

// NewSingleProjectResponseDtoWithDefaults instantiates a new SingleProjectResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleProjectResponseDtoWithDefaults() *SingleProjectResponseDto {
	this := SingleProjectResponseDto{}
	return &this
}

// GetId returns the Id field value
func (o *SingleProjectResponseDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SingleProjectResponseDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SingleProjectResponseDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SingleProjectResponseDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SingleProjectResponseDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SingleProjectResponseDto) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SingleProjectResponseDto) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SingleProjectResponseDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SingleProjectResponseDto) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDefaultProject returns the DefaultProject field value
func (o *SingleProjectResponseDto) GetDefaultProject() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultProject
}

// GetDefaultProjectOk returns a tuple with the DefaultProject field value
// and a boolean to check if the value has been set.
func (o *SingleProjectResponseDto) GetDefaultProjectOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultProject, true
}

// SetDefaultProject sets field value
func (o *SingleProjectResponseDto) SetDefaultProject(v bool) {
	o.DefaultProject = v
}

func (o SingleProjectResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["defaultProject"] = o.DefaultProject
	}
	return json.Marshal(toSerialize)
}

type NullableSingleProjectResponseDto struct {
	value *SingleProjectResponseDto
	isSet bool
}

func (v NullableSingleProjectResponseDto) Get() *SingleProjectResponseDto {
	return v.value
}

func (v *NullableSingleProjectResponseDto) Set(val *SingleProjectResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleProjectResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleProjectResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleProjectResponseDto(val *SingleProjectResponseDto) *NullableSingleProjectResponseDto {
	return &NullableSingleProjectResponseDto{value: val, isSet: true}
}

func (v NullableSingleProjectResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleProjectResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
