// Code generated by OpenAPI Generator. DO NOT EDIT.
//
// lybic
//
// No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
// API version: 0.6.3
// Generated by: OpenAPI Generator (https://openapi-generator.tech)
//

package lybic

import (
	"github.com/lybic/lybic-sdk-go/pkg/json"
)

// McpServerResponseDto struct for McpServerResponseDto
type McpServerResponseDto struct {
	// ID of the MCP server.
	Id string `json:"id"`
	// Name of the MCP server.
	Name string `json:"name"`
	// Creation date of the MCP server.
	CreatedAt string `json:"createdAt"`
	// Whether this is the default MCP server for the organization.
	DefaultMcpServer bool `json:"defaultMcpServer"`
	// Project ID to which the MCP server belongs.
	ProjectId string                     `json:"projectId"`
	Policy    McpServerResponseDtoPolicy `json:"policy"`
	// ID of the currently connected sandbox.
	CurrentSandboxId *string `json:"currentSandboxId"`
}

// NewMcpServerResponseDto instantiates a new McpServerResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcpServerResponseDto(id string, name string, createdAt string, defaultMcpServer bool, projectId string, policy McpServerResponseDtoPolicy, currentSandboxId *string) *McpServerResponseDto {
	this := McpServerResponseDto{}
	this.Id = id
	this.Name = name
	this.CreatedAt = createdAt
	this.DefaultMcpServer = defaultMcpServer
	this.ProjectId = projectId
	this.Policy = policy
	this.CurrentSandboxId = currentSandboxId
	return &this
}

// NewMcpServerResponseDtoWithDefaults instantiates a new McpServerResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcpServerResponseDtoWithDefaults() *McpServerResponseDto {
	this := McpServerResponseDto{}
	return &this
}

// GetId returns the Id field value
func (o *McpServerResponseDto) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *McpServerResponseDto) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *McpServerResponseDto) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *McpServerResponseDto) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *McpServerResponseDto) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *McpServerResponseDto) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDefaultMcpServer returns the DefaultMcpServer field value
func (o *McpServerResponseDto) GetDefaultMcpServer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DefaultMcpServer
}

// GetDefaultMcpServerOk returns a tuple with the DefaultMcpServer field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetDefaultMcpServerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultMcpServer, true
}

// SetDefaultMcpServer sets field value
func (o *McpServerResponseDto) SetDefaultMcpServer(v bool) {
	o.DefaultMcpServer = v
}

// GetProjectId returns the ProjectId field value
func (o *McpServerResponseDto) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *McpServerResponseDto) SetProjectId(v string) {
	o.ProjectId = v
}

// GetPolicy returns the Policy field value
func (o *McpServerResponseDto) GetPolicy() McpServerResponseDtoPolicy {
	if o == nil {
		var ret McpServerResponseDtoPolicy
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *McpServerResponseDto) GetPolicyOk() (*McpServerResponseDtoPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *McpServerResponseDto) SetPolicy(v McpServerResponseDtoPolicy) {
	o.Policy = v
}

// GetCurrentSandboxId returns the CurrentSandboxId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *McpServerResponseDto) GetCurrentSandboxId() string {
	if o == nil || o.CurrentSandboxId == nil {
		return ""
	}

	return *o.CurrentSandboxId
}

// GetCurrentSandboxIdOk returns a tuple with the CurrentSandboxId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *McpServerResponseDto) GetCurrentSandboxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CurrentSandboxId, o.CurrentSandboxId == nil
}

// SetCurrentSandboxId sets field value
func (o *McpServerResponseDto) SetCurrentSandboxId(v string) {
	o.CurrentSandboxId = &v
}

func (o McpServerResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if true {
		toSerialize["defaultMcpServer"] = o.DefaultMcpServer
	}
	if true {
		toSerialize["projectId"] = o.ProjectId
	}
	if true {
		toSerialize["policy"] = o.Policy
	}
	if true {
		toSerialize["currentSandboxId"] = o.CurrentSandboxId
	}
	return json.Marshal(toSerialize)
}

type NullableMcpServerResponseDto struct {
	value *McpServerResponseDto
	isSet bool
}

func (v NullableMcpServerResponseDto) Get() *McpServerResponseDto {
	return v.value
}

func (v *NullableMcpServerResponseDto) Set(val *McpServerResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableMcpServerResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableMcpServerResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcpServerResponseDto(val *McpServerResponseDto) *NullableMcpServerResponseDto {
	return &NullableMcpServerResponseDto{value: val, isSet: true}
}

func (v NullableMcpServerResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcpServerResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
