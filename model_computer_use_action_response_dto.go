// Code generated by OpenAPI Generator. DO NOT EDIT.
//
// lybic
//
// No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
// API version: 0.6.3
// Generated by: OpenAPI Generator (https://openapi-generator.tech)
//

package lybic

import (
	"github.com/lybic/lybic-sdk-go/pkg/json"
)

// ComputerUseActionResponseDto struct for ComputerUseActionResponseDto
type ComputerUseActionResponseDto struct {
	Actions []ComputerUseActionResponseDtoActionsOneOf `json:"actions"`
	// Unknown text that is not thoughts nor actions, commonly due to the misformat of model output
	Unknown *string `json:"unknown,omitempty"`
	// Thoughts that are not parsed
	Thoughts *string `json:"thoughts,omitempty"`
}

// NewComputerUseActionResponseDto instantiates a new ComputerUseActionResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerUseActionResponseDto(actions []ComputerUseActionResponseDtoActionsOneOf) *ComputerUseActionResponseDto {
	this := ComputerUseActionResponseDto{}
	this.Actions = actions
	return &this
}

// NewComputerUseActionResponseDtoWithDefaults instantiates a new ComputerUseActionResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerUseActionResponseDtoWithDefaults() *ComputerUseActionResponseDto {
	this := ComputerUseActionResponseDto{}
	return &this
}

// GetActions returns the Actions field value
func (o *ComputerUseActionResponseDto) GetActions() []ComputerUseActionResponseDtoActionsOneOf {
	if o == nil {
		var ret []ComputerUseActionResponseDtoActionsOneOf
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetActionsOk() (*[]ComputerUseActionResponseDtoActionsOneOf, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actions, true
}

// SetActions sets field value
func (o *ComputerUseActionResponseDto) SetActions(v []ComputerUseActionResponseDtoActionsOneOf) {
	o.Actions = v
}

// GetUnknown returns the Unknown field value if set, zero value otherwise.
func (o *ComputerUseActionResponseDto) GetUnknown() string {
	if o == nil || o.Unknown == nil {
		var ret string
		return ret
	}
	return *o.Unknown
}

// GetUnknownOk returns a tuple with the Unknown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetUnknownOk() (*string, bool) {
	if o == nil || o.Unknown == nil {
		return nil, false
	}
	return o.Unknown, true
}

// HasUnknown returns a boolean if a field has been set.
func (o *ComputerUseActionResponseDto) HasUnknown() bool {
	if o != nil && o.Unknown != nil {
		return true
	}

	return false
}

// SetUnknown gets a reference to the given string and assigns it to the Unknown field.
func (o *ComputerUseActionResponseDto) SetUnknown(v string) {
	o.Unknown = &v
}

// GetThoughts returns the Thoughts field value if set, zero value otherwise.
func (o *ComputerUseActionResponseDto) GetThoughts() string {
	if o == nil || o.Thoughts == nil {
		var ret string
		return ret
	}
	return *o.Thoughts
}

// GetThoughtsOk returns a tuple with the Thoughts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetThoughtsOk() (*string, bool) {
	if o == nil || o.Thoughts == nil {
		return nil, false
	}
	return o.Thoughts, true
}

// HasThoughts returns a boolean if a field has been set.
func (o *ComputerUseActionResponseDto) HasThoughts() bool {
	if o != nil && o.Thoughts != nil {
		return true
	}

	return false
}

// SetThoughts gets a reference to the given string and assigns it to the Thoughts field.
func (o *ComputerUseActionResponseDto) SetThoughts(v string) {
	o.Thoughts = &v
}

func (o ComputerUseActionResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actions"] = o.Actions
	}
	if o.Unknown != nil {
		toSerialize["unknown"] = o.Unknown
	}
	if o.Thoughts != nil {
		toSerialize["thoughts"] = o.Thoughts
	}
	return json.Marshal(toSerialize)
}

type NullableComputerUseActionResponseDto struct {
	value *ComputerUseActionResponseDto
	isSet bool
}

func (v NullableComputerUseActionResponseDto) Get() *ComputerUseActionResponseDto {
	return v.value
}

func (v *NullableComputerUseActionResponseDto) Set(val *ComputerUseActionResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerUseActionResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerUseActionResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerUseActionResponseDto(val *ComputerUseActionResponseDto) *NullableComputerUseActionResponseDto {
	return &NullableComputerUseActionResponseDto{value: val, isSet: true}
}

func (v NullableComputerUseActionResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerUseActionResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
