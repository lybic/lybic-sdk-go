// Code generated by OpenAPI Generator. DO NOT EDIT.
//
// lybic
//
// No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
//
// API version: 0.8
// Generated by: OpenAPI Generator (https://openapi-generator.tech)
//

package lybic

import (
	"fmt"

	"github.com/lybic/lybic-sdk-go/pkg/json"
)

// ComputerUseActionResponseDto struct for ComputerUseActionResponseDto
type ComputerUseActionResponseDto struct {
	Actions []ComputerUseActionDtoActionOneOf `json:"actions"`
	// Unknown text that is not thoughts nor actions, commonly due to the misformat of model output
	Unknown *string `json:"unknown,omitempty"`
	// Memory that is not parsed
	Memory *string `json:"memory,omitempty"`
	// Thoughts that are not parsed
	Thoughts *string `json:"thoughts,omitempty"`
}

func (o *ComputerUseActionResponseDto) UnmarshalJSON(data []byte) error {
	// Use a temporary struct with Actions as a slice of json.RawMessage to avoid recursion.
	var temp struct {
		Actions  []json.RawMessage `json:"actions"`
		Unknown  *string           `json:"unknown,omitempty"`
		Thoughts *string           `json:"thoughts,omitempty"`
	}

	if err := json.Unmarshal(data, &temp); err != nil {
		return err
	}

	o.Unknown = temp.Unknown
	o.Thoughts = temp.Thoughts
	o.Actions = make([]ComputerUseActionDtoActionOneOf, len(temp.Actions))

	for i, rawAction := range temp.Actions {
		action, err := rawMessageToComputerUseActionDtoActionOneOf(rawAction)
		if err != nil {
			return fmt.Errorf("error unmarshaling action at index %d: %w", i, err)
		}
		o.Actions[i] = action
	}
	return nil
}

// NewComputerUseActionResponseDto instantiates a new ComputerUseActionResponseDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComputerUseActionResponseDto(actions []ComputerUseActionDtoActionOneOf) *ComputerUseActionResponseDto {
	this := ComputerUseActionResponseDto{}
	this.Actions = actions
	return &this
}

// NewComputerUseActionResponseDtoWithDefaults instantiates a new ComputerUseActionResponseDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComputerUseActionResponseDtoWithDefaults() *ComputerUseActionResponseDto {
	this := ComputerUseActionResponseDto{}
	return &this
}

// GetActions returns the Actions field value
func (o *ComputerUseActionResponseDto) GetActions() []ComputerUseActionDtoActionOneOf {
	if o == nil {
		var ret []ComputerUseActionDtoActionOneOf
		return ret
	}

	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetActionsOk() (*[]ComputerUseActionDtoActionOneOf, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Actions, true
}

// SetActions sets field value
func (o *ComputerUseActionResponseDto) SetActions(v []ComputerUseActionDtoActionOneOf) {
	o.Actions = v
}

// GetUnknown returns the Unknown field value if set, zero value otherwise.
func (o *ComputerUseActionResponseDto) GetUnknown() string {
	if o == nil || o.Unknown == nil {
		var ret string
		return ret
	}
	return *o.Unknown
}

// GetUnknownOk returns a tuple with the Unknown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetUnknownOk() (*string, bool) {
	if o == nil || o.Unknown == nil {
		return nil, false
	}
	return o.Unknown, true
}

// HasUnknown returns a boolean if a field has been set.
func (o *ComputerUseActionResponseDto) HasUnknown() bool {
	if o != nil && o.Unknown != nil {
		return true
	}

	return false
}

// SetUnknown gets a reference to the given string and assigns it to the Unknown field.
func (o *ComputerUseActionResponseDto) SetUnknown(v string) {
	o.Unknown = &v
}

// GetMemory returns the Memory field value if set, zero value otherwise.
func (o *ComputerUseActionResponseDto) GetMemory() string {
	if o == nil || o.Memory == nil {
		var ret string
		return ret
	}
	return *o.Memory
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetMemoryOk() (*string, bool) {
	if o == nil || o.Memory == nil {
		return nil, false
	}
	return o.Memory, true
}

// HasMemory returns a boolean if a field has been set.
func (o *ComputerUseActionResponseDto) HasMemory() bool {
	if o != nil && o.Memory != nil {
		return true
	}

	return false
}

// SetMemory gets a reference to the given string and assigns it to the Memory field.
func (o *ComputerUseActionResponseDto) SetMemory(v string) {
	o.Memory = &v
}

// GetThoughts returns the Thoughts field value if set, zero value otherwise.
func (o *ComputerUseActionResponseDto) GetThoughts() string {
	if o == nil || o.Thoughts == nil {
		var ret string
		return ret
	}
	return *o.Thoughts
}

// GetThoughtsOk returns a tuple with the Thoughts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComputerUseActionResponseDto) GetThoughtsOk() (*string, bool) {
	if o == nil || o.Thoughts == nil {
		return nil, false
	}
	return o.Thoughts, true
}

// HasThoughts returns a boolean if a field has been set.
func (o *ComputerUseActionResponseDto) HasThoughts() bool {
	if o != nil && o.Thoughts != nil {
		return true
	}

	return false
}

// SetThoughts gets a reference to the given string and assigns it to the Thoughts field.
func (o *ComputerUseActionResponseDto) SetThoughts(v string) {
	o.Thoughts = &v
}

func (o ComputerUseActionResponseDto) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["actions"] = o.Actions
	}
	if o.Unknown != nil {
		toSerialize["unknown"] = o.Unknown
	}
	if o.Memory != nil {
		toSerialize["memory"] = o.Memory
	}
	if o.Thoughts != nil {
		toSerialize["thoughts"] = o.Thoughts
	}
	return json.Marshal(toSerialize)
}

type NullableComputerUseActionResponseDto struct {
	value *ComputerUseActionResponseDto
	isSet bool
}

func (v NullableComputerUseActionResponseDto) Get() *ComputerUseActionResponseDto {
	return v.value
}

func (v *NullableComputerUseActionResponseDto) Set(val *ComputerUseActionResponseDto) {
	v.value = val
	v.isSet = true
}

func (v NullableComputerUseActionResponseDto) IsSet() bool {
	return v.isSet
}

func (v *NullableComputerUseActionResponseDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComputerUseActionResponseDto(val *ComputerUseActionResponseDto) *NullableComputerUseActionResponseDto {
	return &NullableComputerUseActionResponseDto{value: val, isSet: true}
}

func (v NullableComputerUseActionResponseDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComputerUseActionResponseDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
